{
	"name": "Dive into Delta Lake Workshop - Update",
	"properties": {
		"folder": {
			"name": "Dive into Delta Lake"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spontespark310",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/305180cd-c5ab-4c0f-b752-c85bdcf5dc88/resourceGroups/rg-sponte-synapse-one-click/providers/Microsoft.Synapse/workspaces/spoexxbkqfmujmvmpocws1/bigDataPools/spontespark310",
				"name": "spontespark310",
				"type": "Spark",
				"endpoint": "https://spoexxbkqfmujmvmpocws1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spontespark310",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dive into Delta Lake Workshop #\r\n",
					"### Spark 3.1.2 | Delta Lake 1.0.0 ###\r\n",
					"\r\n",
					"Reference: https://docs.microsoft.com/en-us/azure/synapse-analytics/spark/apache-spark-3-runtime"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"print(\"spark version: \",spark.version)"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.functions import *"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM delta_lake_house.stage_taxi_zone LIMIT 5"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"DESCRIBE delta_lake_house.stage_taxi_trip_2018"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"INSERT INTO delta_lake_house.taxi_trip\r\n",
					"SELECT\r\n",
					"CAST(VendorID AS int) AS VendorID\r\n",
					",CAST(tpep_pickup_datetime AS timestamp) AS tpep_pickup_datetime\r\n",
					",CAST(tpep_dropoff_datetime AS timestamp) AS tpep_dropoff_datetime\r\n",
					",CAST(passenger_count AS int) AS passenger_count \r\n",
					",CAST(trip_distance AS decimal(5,2)) AS trip_distance \r\n",
					",CAST(RatecodeID AS int) AS RatecodeID\r\n",
					",CAST(store_and_fwd_flag AS char(1)) AS store_and_fwd_flag\r\n",
					",CAST(PULocationID AS int) AS PULocationID\r\n",
					",CAST(DOLocationID AS int) AS DOLocationID\r\n",
					",CAST(NULL AS int) AS ZoneKey\r\n",
					",CAST(payment_type AS int) AS payment_type\r\n",
					",CAST(fare_amount AS decimal(7,2)) AS fare_amount\r\n",
					",CAST(extra AS decimal(5,2)) AS extra\r\n",
					",CAST(mta_tax AS decimal(5,2)) AS mta_tax\r\n",
					",CAST(tip_amount AS decimal(5,2)) AS tip_amount\r\n",
					",CAST(tolls_amount AS decimal(5,2)) AS tolls_amount\r\n",
					",CAST(improvement_surcharge AS decimal(5,2)) AS improvement_surcharge\r\n",
					",CAST(total_amount AS decimal(7,2)) AS total_amount\r\n",
					",SUBSTR(tpep_pickup_datetime,1,7) AS YYYYMM\r\n",
					"FROM delta_lake_house.stage_taxi_trip_2018"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM delta_lake_house.taxi_trip WHERE YYYYMM > '2018-00' LIMIT 5"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"UPDATE delta_lake_house.taxi_zone \r\n",
					"SET \r\n",
					"ExpirationDt = CAST(current_date() AS DATE)\r\n",
					",ActiveFlag = 0\r\n",
					"WHERE\r\n",
					"ExpirationDt IS NULL"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM delta_lake_house.taxi_zone LIMIT 5"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"INSERT INTO delta_lake_house.taxi_zone\r\n",
					"SELECT\r\n",
					"row_number() OVER(ORDER BY CAST(tz.LocationID AS int)) + (SELECT MAX(ZoneKey) FROM delta_lake_house.taxi_zone) as ZoneKey\r\n",
					",CAST(tz.LocationID AS int) AS LocationID\r\n",
					",CAST(tz.Borough AS varchar(64)) AS Borough\r\n",
					",CAST(tz.Zone AS varchar(64)) AS Zone\r\n",
					",CAST(tz.service_zone AS varchar(64)) AS ServiceZone\r\n",
					",tt.TripCount\r\n",
					",tt.AverageDistance\r\n",
					",tt.AverageFare\r\n",
					",CAST(current_date() AS DATE) AS EffectiveDt\r\n",
					",CAST(NULL AS DATE) AS ExpirationDt\r\n",
					",1 AS ActiveFlag\r\n",
					"FROM \r\n",
					"delta_lake_house.stage_taxi_zone tz\r\n",
					"LEFT OUTER JOIN\r\n",
					"    (SELECT\r\n",
					"    CAST(DOLocationID AS int) AS DOLocationID\r\n",
					"    ,COUNT(*) AS TripCount\r\n",
					"    ,AVG(trip_distance) AS AverageDistance\r\n",
					"    ,AVG(fare_amount) AS AverageFare\r\n",
					"    FROM\r\n",
					"    delta_lake_house.taxi_trip\r\n",
					"    WHERE\r\n",
					"    YYYYMM > '2018-00'\r\n",
					"    GROUP BY\r\n",
					"    CAST(DOLocationID AS int)\r\n",
					"    ) tt\r\n",
					"    ON tz.LocationID = tt.DOLocationID\r\n",
					"ORDER BY \r\n",
					"CAST(tz.LocationID AS int)"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM delta_lake_house.taxi_zone WHERE LocationID = 1 LIMIT 5"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"MERGE INTO delta_lake_house.taxi_trip \r\n",
					"USING delta_lake_house.taxi_zone \r\n",
					"ON delta_lake_house.taxi_trip.DOLocationID = delta_lake_house.taxi_zone.LocationID \r\n",
					"AND delta_lake_house.taxi_zone.ActiveFlag = 1\r\n",
					"AND delta_lake_house.taxi_trip.YYYYMM > '2018-00'\r\n",
					"WHEN MATCHED THEN\r\n",
					"  UPDATE SET delta_lake_house.taxi_trip.ZoneKey = delta_lake_house.taxi_zone.ZoneKey"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT \r\n",
					"ZoneKey\r\n",
					",DOLocationID\r\n",
					",YYYYMM\r\n",
					",COUNT(*) AS TripCount \r\n",
					"FROM \r\n",
					"delta_lake_house.taxi_trip \r\n",
					"WHERE \r\n",
					"DOLocationID = 1 AND YYYYMM IN ('2017-01', '2018-01') \r\n",
					"GROUP BY\r\n",
					"ZoneKey\r\n",
					",DOLocationID\r\n",
					",YYYYMM\r\n",
					"LIMIT 5"
				],
				"execution_count": 23
			}
		]
	}
}